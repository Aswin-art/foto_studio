generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model addon {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  price         Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  customeraddon customeraddon[]
}

model customeraddon {
  id                  Int                 @id @default(autoincrement())
  transactionId       Int
  addonId             Int
  quantity            Int
  createdAt           DateTime            @default(now())
  updatedAt           DateTime
  addon               addon               @relation(fields: [addonId], references: [id], onDelete: NoAction, map: "CustomerAddon_addonId_fkey")
  customertransaction customertransaction @relation(fields: [transactionId], references: [id], onDelete: NoAction, map: "CustomerAddon_transactionId_fkey")

  @@index([addonId], map: "CustomerAddon_addonId_fkey")
  @@index([transactionId], map: "CustomerAddon_transactionId_fkey")
}

model customertransaction {
  id            Int             @id @default(autoincrement())
  studioId      Int
  voucherId     Int?
  customerName  String          @db.VarChar(255)
  customerEmail String          @db.VarChar(255)
  customerPhone String          @db.VarChar(15)
  totalPrice    Int
  bookingDate   DateTime        @db.Date
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  isApproved    Boolean?
  bookingTime   Int
  customeraddon customeraddon[]
  studio        studio          @relation(fields: [studioId], references: [id], map: "CustomerTransaction_studioId_fkey")
  voucher       voucher?        @relation(fields: [voucherId], references: [id], map: "CustomerTransaction_voucherId_fkey")

  @@index([studioId], map: "CustomerTransaction_studioId_fkey")
  @@index([voucherId], map: "CustomerTransaction_voucherId_fkey")
}

model holiday {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model studio {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  description         String?               @db.VarChar(500)
  image               String?               @db.VarChar(255)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  price               Int
  customertransaction customertransaction[]
}

model users {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model voucher {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique @db.VarChar(255)
  discount            Decimal?              @db.Decimal(5, 2)
  count               Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  customertransaction customertransaction[]
}
