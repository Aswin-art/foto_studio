// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Studio {
  id           Int                   @id @default(autoincrement())
  name         String                @db.VarChar(255)
  description  String?               @db.VarChar(500)
  image        String?               @db.VarChar(255)
  transactions CustomerTransaction[]
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
}

model Addon {
  id             Int             @id @default(autoincrement())
  name           String          @db.VarChar(255)
  price          Int
  customerAddons CustomerAddon[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Voucher {
  id           Int                   @id @default(autoincrement())
  name         String                @db.VarChar(255)
  discount     String?               @db.VarChar(255)
  count        Int
  transactions CustomerTransaction[]
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
}

model CustomerTransaction {
  id             Int             @id @default(autoincrement())
  studio         Studio?         @relation(fields: [studioId], references: [id])
  studioId       Int?
  voucher        Voucher?        @relation(fields: [voucherId], references: [id])
  voucherId      Int?
  customerName   String          @db.VarChar(255)
  customerEmail  String          @db.VarChar(255)
  customerPhone  String          @db.VarChar(15)
  totalPrice     Int
  bookingDate    DateTime        @db.Date
  bookingTime    DateTime
  customerAddons CustomerAddon[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model CustomerAddon {
  id            Int                 @id @default(autoincrement())
  transaction   CustomerTransaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  addon         Addon               @relation(fields: [addonId], references: [id])
  addonId       Int
  quantity      Int
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
